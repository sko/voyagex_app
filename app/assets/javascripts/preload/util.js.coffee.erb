unless window.VoyageX?
  window.VoyageX = {}
class window.VoyageX.Util

  constructor: (isMobile) ->
    window.UTIL = this
    if isMobile
      # if not set then jquery-mobile will add origin header to request -  causing No 'Access-Control-Allow-Origin' 
      $.mobile.ajaxEnabled = false;

  # http://www.csgnetwork.com/degreelenllavcalc.html
  _meterToLatLng: (lat) ->
    conv_factor = (2.0 * Math.PI)/360.0;
    latRad = lat * conv_factor;

    m1 = 111132.92
    m2 = -559.82
    m3 = 1.175
    m4 = -0.0023
    p1 = 111412.84
    p2 = -93.5
    p3 = 0.118
    
    # Calculate the length of a degree of latitude and longitude in meters
    latlen = m1 + (m2 * Math.cos(2 * latRad)) + (m3 * Math.cos(4 * latRad)) + (m4 * Math.cos(6 * latRad))
    longlen = (p1 * Math.cos(latRad)) + (p2 * Math.cos(3 * latRad)) + (p3 * Math.cos(5 * latRad))
    { meterLat: 1.0 / latlen, meterLng: 1.0 / longlen}

  padTextHtml: (text, minLength) ->
    count = 0
    while text.length < minLength
      count += 1
      text += if count%5==0 then ' ' else '.'
    text.replace(/([ .]+)$/, ' <span style="color:white;">$1</span>')

  trimPosVal: (latOrLng) ->
    Math.round(latOrLng*10000000)/10000000

  searchBounds: (lat, lng, radiusMeters) ->
    if radiusMeters <= 0
      return null

    meterLatLng = this._meterToLatLng lat

    diameterLat = meterLatLng.meterLat * radiusMeters
    diameterLng = meterLatLng.meterLng * radiusMeters
    inner_square_half_side_length_lat = Math.sqrt((2*diameterLat)**2) / 2
    inner_square_half_side_length_lng = Math.sqrt((2*diameterLng)**2) / 2
    
    { lng_west: this.trimPosVal(lng-inner_square_half_side_length_lng),\
      lng_east: this.trimPosVal(lng+inner_square_half_side_length_lng),\
      lat_south: this.trimPosVal(lat-inner_square_half_side_length_lat),\
      lat_north: this.trimPosVal(lat+inner_square_half_side_length_lat) }

  withinSearchBounds: (lat, lng, searchBounds) ->
    lat >= searchBounds.lat_south && lat <= searchBounds.lat_north &&
    lng >= searchBounds.lng_west && lng <= searchBounds.lng_east

  clone: (object, addAttributes = null) ->
    if addAttributes?
      cloned = addAttributes
    else
      cloned = {}
    for key in Object.keys(object)
      cloned[key] = object[key]
    cloned

  $.fn.selectRange = (start, end) ->
    if !end
      end = start
    this.each () ->
      if this.setSelectionRange
        this.focus()
        try
          this.setSelectionRange(start, end)
        catch error
          console.log('error when trying to set selectionRange: ', error)
      else if this.createTextRange
        range = this.createTextRange()
        range.collapse(true)
        range.moveEnd('character', end)
        range.moveStart('character', start)
        range.select()

  $.fn.insertAtCursor = (myValue) ->
    return this.each (i) ->
        if (document.selection)
          # For browsers like Internet Explorer
          this.focus()
          sel = document.selection.createRange()
          sel.text = myValue
          this.focus()
        else if (this.selectionStart || this.selectionStart == '0') 
          # For browsers like Firefox and Webkit based
          startPos = this.selectionStart
          endPos = this.selectionEnd
          scrollTop = this.scrollTop
          this.value = this.value.substring(0, startPos) + myValue + 
                  this.value.substring(endPos,this.value.length)
          this.focus()
          this.selectionStart = startPos + myValue.length
          this.selectionEnd = startPos + myValue.length
          this.scrollTop = scrollTop
        else
          this.value += myValue
          this.focus()

new VoyageX.Util IS_MOBILE
